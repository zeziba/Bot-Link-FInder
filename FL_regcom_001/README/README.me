Link Finder 1000

---IMPORTANT BEFORE USE---
To ensure the program runs properly the color of highlighted text must be determined.

To do this easily open the browser that will be used with the program. Once open hit ctrl+f to enter search mode.
See setup_1.png

Enter in some text seen on the screen.

Once it highlights the text hit the print screen button with out exiting the search mode.

Next open a image editor with the capability to identify the color of a pixel(Generally called the eye drop tool).
See setup_2.png

Use the tool on the highlighted color and save write the three values it gives you in the order of red, blue, green

Once the RBG value has been found, navigate to the programs conf folder and open the config.properties file, if the
file does not exist run the program one time with a window open, it will fail. After it fails the file will generate.

With the RGB value enter into the config.properties the program will be able to identify the links visually.
If the link is failed to be found 5 time (default) it will use a keyboard shortcut to use the link.

NOTE: Chrome
    It is not possible to set the colors in chrome with out an extension, as such the above steps must be taken
    if any theme changes happen to the os.

    It is possible to set the default color within the OS for chrome but that is outside the scope of this readme.
__________________________

This program looks for a file called topics.txt inside of the calling folder. Once
it finds the file it will load it and parse each line.

The structure of each line is as follows

    <Search Term for Google.com>,<topic sentence to find>,<topic sentence to find>,<topic sentence to find>...

So a file would look something like the following

    cars,advanced search,auto.com,2018 honda accord

The program will take the above, first it will navigate to google.com with the shortcut F6, after it arrives on
google.com it will search the page for the term to be found. Once the term is found it will move thye mouse to the
term and left click it. Then the program will wait the specified time and then repeat until the list of terms for
that line is complete.

Once it has finished one line it will go to the next until there is no more lines, and at each line it will repeat the
above steps for each line.